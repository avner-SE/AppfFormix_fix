---
# Install AppFormix dependencies
#
# Arguments:
#   state: 'present' or 'absent' (Default: 'present')
#
# This playbook can also be used to uninstall dependencies that were installed
# for AppFormix.  Please note that because some dependencies may have already
# been installed before this playbook was used, you should check whether you
# want these software packages uninstalled before using this playbook with
# state=absent.
#

- hosts: localhost
  vars:
    - appformix_username: "{{ lookup('env','APPFORMIX_USERNAME') | default('') }}"
    - appformix_password: "{{ lookup('env','APPFORMIX_PASSWORD') | default('') }}"
  tasks:
    - name: Check ansible version
      assert:
        that:
          - (ansible_version.full | version_compare('1.9.6', '=='))
            or (ansible_version.full | version_compare('2.1.2', '>=')
                and ansible_version.full | version_compare('2.2', '<'))
                or (ansible_version.full | version_compare('2.2.1', '>=')
                    and ansible_version.full | version_compare('2.4.3', '<'))
        msg: "Unsupported Ansible version {{ ansible_version.full }}. Supported versions: 1.9.6, 2.1.2 - Less than and not-including 2.2, 2.2.1 - Less than and not-including 2.4.3"

    - name: Check for Username and Password
      fail: msg="Variable {{ item }} is not defined."
      when: '{{ item }} is undefined or {{ item }} == ""'
      with_items:
        - appformix_username
        - appformix_password
      ignore_errors: yes

- include: prerequisites_common.yml
  tags: ['prerequisites']
  vars:
    state: present
