---
- name: Check required variables
  fail: msg="Variable {{ item }} is required."
  when: item is undefined or item == ""
  with_items:
    - appformix_dashboard_version

- name: Create AppFormix Dashboard config directory
  file: path="{{item}}" state=directory mode=755
  become: true
  with_items:
    - "{{ appformix_install_dir }}/etc/dashboard"

- name: Start AppFormix Dashboard container
  docker:
    name: appformix-dashboard
    image: "{{ appformix_dashboard_image }}"
    state: "{{ appformix_dashboard_state }}"
    restart_policy: always
    net: "{{ appformix_network }}"
    ports: "{{ appformix_dashboard_ports }}"
    pull: "{{ appformix_dashboard_pull }}"
    volumes: "{{ appformix_dashboard_volumes }}"
    env:
      VCENTER_ADAPTER_ROUTE_SUPPORTED: "{{ vcenter_platform_enabled }}"
      OPENSTACK_ADAPTER_ROUTE_SUPPORTED: "{{ openstack_platform_enabled }}"
      KUBERNETES_ADAPTER_ROUTE_SUPPORTED: "{{ kubernetes_platform_enabled }}"
      AWS_ADAPTER_ROUTE_SUPPORTED: "{{ aws_platform_enabled }}"
      AZURE_ADAPTER_ROUTE_SUPPORTED: "{{ azure_platform_enabled }}"
      GCP_ADAPTER_ROUTE_SUPPORTED: "{{ gcp_platform_enabled }}"
      NETWORK_DEVICE_ADAPTER_ROUTE_SUPPORTED: "{{ network_device_discovery_enabled }}"
      APPFORMIX_STREAM_ROUTE_SUPPORTED: "{{ appformix_stream_enabled }}"

# - name: Wait for AppFormix Dashboard to be ready
#   wait_for: port={{ appformix_dashboard_port_http }} timeout=20

# - name: Wait for AppFormix Dashboard to be ready (SSL Enabled)
#   wait_for: port={{ appformix_dashboard_port_https }} timeout=20
#   when: appformix_ssl_enabled
