---
- name: Check required variables
  fail: msg="Variable {{ item }} is required."
  when: '{{ item }} is undefined or {{ item }} == ""'
  with_items:
    - appformix_azure_adapter_version

- name: Create AppFormix Azure Adapter log directories
  file: path="{{item}}" state=directory mode=755
  become: true
  with_items:
    - /var/log/appformix/azure_adapter/appformix
    - /var/log/appformix/azure_adapter/nginx

- name: Start AppFormix Azure Adapter container
  docker:
    name: appformix-azure-adapter
    image: "{{appformix_docker_registry}}appformix/azure_adapter:{{appformix_azure_adapter_version}}"
    state: "{{ appformix_azure_adapter_state }}"
    restart_policy: always
    dns: ["127.0.0.1"]
    net: "{{ appformix_network }}"
    ports: "{{ appformix_azure_adapter_ports }}"
    pull: "{{ appformix_azure_adapter_pull }}"
    volumes: "{{ appformix_azure_adapter_volumes }}"
    env:
      MONGO_HOST: "{{ appformix_mongo_host }}"
      MONGO_PORT: "{{ appformix_mongo_port }}"
      MONGO_USERNAME: "{{ appformix_mongo_username }}"
      MONGO_PASSWORD: "{{ appformix_mongo_password }}"
      REDIS_HOST: "{{ appformix_redis_host }}"
      REDIS_PORT: "{{ appformix_redis_port }}"
      REDIS_PASSWORD: "{{ appformix_redis_password }}"
      LOG_ROTATE_MAX_COUNT: "{{ appformix_log_rotate_max_count }}"
      LOG_ROTATE_MAX_BYTES: "{{ appformix_log_rotate_max_bytes }}"
      LOG_ROTATE_MAX_HOURS: "{{ appformix_log_rotate_max_hours }}"

#- name: Wait for AppFormix Azure Adapter to be ready
#  wait_for: port={{ appformix_azure_adapter_port_http }} timeout=20
#
#- name: Wait for AppFormix Azure Adapter to be ready (SSL Enabled)
#  wait_for: port={{ appformix_azure_adapter_port_https }} timeout=20
#  when: appformix_ssl_enabled

# These facts are set on the host to which this role is being applied
- name: Export parameters to other plays
  set_fact:
    appformix_azure_adapter_port_http: "{{ appformix_azure_adapter_port_http }}"
    appformix_azure_adapter_port_https: "{{ appformix_azure_adapter_port_https }}"
