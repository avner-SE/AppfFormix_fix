---
- name: Ensure AppFormix Mongos Client configuration directory exists
  become: yes
  file:
      path: "{{ appformix_host_mongos_client_conf_dir }}"
      state: "{{ appformix_host_mongos_client_conf_dir_state }}"
      owner: root
      group: root
      mode: 0755

- name: Copy AppFormix Mongos Client configuration file to the Management host
  become: yes
  template:
      src: "mongos.conf"
      dest: "{{ appformix_host_mongos_client_conf_dir }}"
      owner: root
      group: root
      mode: 0644
  when: appformix_mongos_client_state != 'absent'

- name: Copy the keyfile for authentication
  become: true
  copy: src=secret dest={{ appformix_host_mongos_client_conf_dir }}/secret owner=root group=root mode=0400
  when: appformix_mongos_client_state != 'absent'

- name: Start AppFormix Mongos Client Container
  docker:
      name: "{{ appformix_mongos_client_name }}"
      image: "{{ appformix_mongos_client_image }}"
      state: "{{ appformix_mongos_client_state }}"
      restart_policy: always
      net: "{{ appformix_network }}"
      hostname: "{{ inventory_hostname }}"
      expose:
      - "{{ appformix_mongos_client_port }}"
      ports:
      - "{{ appformix_mongos_client_docker_ports }}"
      volumes: "{{ appformix_mongos_client_volumes }}"
      command: /usr/bin/mongos
               -f "{{ appformix_mongos_client_container_conf }}"

- name: Check AppFormix Mongos Client Container is started
  wait_for:
      host: "{{ inventory_hostname }}"
      port: "{{ appformix_mongos_client_exposed_port }}"
      state: started
      timeout: "{{ appformix_mongos_client_start_timeout }}"
  delegate_to: localhost
  when: appformix_mongos_client_state != 'absent'
